/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_components_InteractiveStellarMap_index_ts"],{

/***/ "(app-pages-browser)/./src/components/InteractiveStellarMap/InteractiveStellarMap.module.css":
/*!*******************************************************************************!*\
  !*** ./src/components/InteractiveStellarMap/InteractiveStellarMap.module.css ***!
  \*******************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InteractiveStellarMap_container__y7PfU\",\"active\":\"InteractiveStellarMap_active__bpLC8\",\"green\":\"InteractiveStellarMap_green__8F1Pf\",\"blue\":\"InteractiveStellarMap_blue__lBURB\",\"red\":\"InteractiveStellarMap_red__AfLLb\",\"purple\":\"InteractiveStellarMap_purple__6KrZs\",\"cyan\":\"InteractiveStellarMap_cyan__Ambin\",\"multi\":\"InteractiveStellarMap_multi__asvOr\",\"canvas\":\"InteractiveStellarMap_canvas__I7spY\",\"scanlines\":\"InteractiveStellarMap_scanlines__2NQI2\",\"content\":\"InteractiveStellarMap_content__plmeV\",\"flicker\":\"InteractiveStellarMap_flicker__A2QWQ\"};\n    if(true) {\n      // 1745581533034\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \nmodule.exports.__checksum = \"acffd18480f9\"\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0ludGVyYWN0aXZlU3RlbGxhck1hcC9JbnRlcmFjdGl2ZVN0ZWxsYXJNYXAubW9kdWxlLmNzcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGtCQUFrQjtBQUNsQixPQUFPLElBQVU7QUFDakI7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyx3TUFBaUksY0FBYyxzREFBc0Q7QUFDbk8sTUFBTSxVQUFVO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9JbnRlcmFjdGl2ZVN0ZWxsYXJNYXAvSW50ZXJhY3RpdmVTdGVsbGFyTWFwLm1vZHVsZS5jc3M/ZTkyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiY29udGFpbmVyXCI6XCJJbnRlcmFjdGl2ZVN0ZWxsYXJNYXBfY29udGFpbmVyX195N1BmVVwiLFwiYWN0aXZlXCI6XCJJbnRlcmFjdGl2ZVN0ZWxsYXJNYXBfYWN0aXZlX19icExDOFwiLFwiZ3JlZW5cIjpcIkludGVyYWN0aXZlU3RlbGxhck1hcF9ncmVlbl9fOEYxUGZcIixcImJsdWVcIjpcIkludGVyYWN0aXZlU3RlbGxhck1hcF9ibHVlX19sQlVSQlwiLFwicmVkXCI6XCJJbnRlcmFjdGl2ZVN0ZWxsYXJNYXBfcmVkX19BZkxMYlwiLFwicHVycGxlXCI6XCJJbnRlcmFjdGl2ZVN0ZWxsYXJNYXBfcHVycGxlX182S3Jac1wiLFwiY3lhblwiOlwiSW50ZXJhY3RpdmVTdGVsbGFyTWFwX2N5YW5fX0FtYmluXCIsXCJtdWx0aVwiOlwiSW50ZXJhY3RpdmVTdGVsbGFyTWFwX211bHRpX19hc3ZPclwiLFwiY2FudmFzXCI6XCJJbnRlcmFjdGl2ZVN0ZWxsYXJNYXBfY2FudmFzX19JN3NwWVwiLFwic2NhbmxpbmVzXCI6XCJJbnRlcmFjdGl2ZVN0ZWxsYXJNYXBfc2NhbmxpbmVzX18yTlFJMlwiLFwiY29udGVudFwiOlwiSW50ZXJhY3RpdmVTdGVsbGFyTWFwX2NvbnRlbnRfX3BsbWVWXCIsXCJmbGlja2VyXCI6XCJJbnRlcmFjdGl2ZVN0ZWxsYXJNYXBfZmxpY2tlcl9fQTJRV1FcIn07XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTc0NTU4MTUzMzAzNFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCJDOi9Vc2Vycy9jay9MYW5kaW5nUHJvc3BlcmEvcHJvc3BlcmEtbmV4dGpzL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICBcbm1vZHVsZS5leHBvcnRzLl9fY2hlY2tzdW0gPSBcImFjZmZkMTg0ODBmOVwiXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/InteractiveStellarMap/InteractiveStellarMap.module.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/InteractiveStellarMap/InteractiveStellarMap.tsx":
/*!************************************************************************!*\
  !*** ./src/components/InteractiveStellarMap/InteractiveStellarMap.tsx ***!
  \************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _InteractiveStellarMap_module_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InteractiveStellarMap.module.css */ \"(app-pages-browser)/./src/components/InteractiveStellarMap/InteractiveStellarMap.module.css\");\n/* harmony import */ var _InteractiveStellarMap_module_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_InteractiveStellarMap_module_css__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nconst InteractiveStellarMap = (param)=>{\n    let { children, density = 50, matrixRainEnabled = true, matrixRainColor = \"#00ff00\", gridEnabled = true, interactiveGlow = true, pulseNodes = true, theme = \"green\", interactive = true } = param;\n    _s();\n    // Refs\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const rainCanvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const gridCanvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const fxCanvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // State\n    const [dimensions, setDimensions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 0,\n        height: 0\n    });\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isInitialized, setIsInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [mousePosition, setMousePosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0,\n        active: false\n    });\n    // Animation frame references\n    const rainAnimationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const gridAnimationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const particlesAnimationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const fxAnimationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Data references\n    const matrixRainRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const gridNodesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const particlesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const lastParticleTimeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const isResizingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const resizeTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Matrix characters\n    const matrixChars = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        return \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$+-*/=<>[]{}|~^%#@!?;:,.\".split(\"\");\n    }, []);\n    // Theme colors\n    const themeColors = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const themes = {\n            green: {\n                primary: \"#00ff00\",\n                secondary: \"#00cc66\",\n                tertiary: \"#003300\",\n                accent: \"#33ff33\",\n                background: \"#001100\"\n            },\n            blue: {\n                primary: \"#0088ff\",\n                secondary: \"#00ccff\",\n                tertiary: \"#000066\",\n                accent: \"#33ccff\",\n                background: \"#000033\"\n            },\n            red: {\n                primary: \"#ff0033\",\n                secondary: \"#cc0000\",\n                tertiary: \"#330000\",\n                accent: \"#ff3333\",\n                background: \"#110000\"\n            },\n            purple: {\n                primary: \"#9900ff\",\n                secondary: \"#6600cc\",\n                tertiary: \"#220033\",\n                accent: \"#aa33ff\",\n                background: \"#110022\"\n            },\n            cyan: {\n                primary: \"#00ffff\",\n                secondary: \"#00cccc\",\n                tertiary: \"#003333\",\n                accent: \"#33ffff\",\n                background: \"#001111\"\n            },\n            multi: {\n                primary: \"#00ff00\",\n                secondary: \"#00ccff\",\n                tertiary: \"#220033\",\n                accent: \"#ff00ff\",\n                background: \"#000022\"\n            }\n        };\n        return themes[theme];\n    }, [\n        theme\n    ]);\n    // Initialize dimensions\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleResize = ()=>{\n            if (!containerRef.current) return;\n            // Mark as resizing to prevent animation artifacts\n            isResizingRef.current = true;\n            // Clear previous timeout\n            if (resizeTimeoutRef.current) {\n                clearTimeout(resizeTimeoutRef.current);\n            }\n            // Get dimensions\n            const { offsetWidth, offsetHeight } = containerRef.current;\n            // Update dimensions state\n            setDimensions({\n                width: offsetWidth,\n                height: offsetHeight\n            });\n            // Reset resizing flag after animations have time to adjust\n            resizeTimeoutRef.current = setTimeout(()=>{\n                isResizingRef.current = false;\n                // Reinitialize if already initialized\n                if (isInitialized) {\n                    // Clean up previous animations\n                    cleanupAnimations();\n                    // Reinitialize with new dimensions\n                    initMatrixRain();\n                    initGrid();\n                }\n            }, 300);\n        };\n        handleResize();\n        // Throttled resize handler for better performance\n        let resizeTimer;\n        const throttledResize = ()=>{\n            clearTimeout(resizeTimer);\n            resizeTimer = setTimeout(handleResize, 100);\n        };\n        window.addEventListener(\"resize\", throttledResize);\n        return ()=>{\n            window.removeEventListener(\"resize\", throttledResize);\n            if (resizeTimeoutRef.current) {\n                clearTimeout(resizeTimeoutRef.current);\n            }\n        };\n    }, []);\n    // Clean up animations\n    const cleanupAnimations = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        [\n            rainAnimationRef,\n            gridAnimationRef,\n            particlesAnimationRef,\n            fxAnimationRef\n        ].forEach((ref)=>{\n            if (ref.current) {\n                cancelAnimationFrame(ref.current);\n                ref.current = null;\n            }\n        });\n    }, []);\n    // Initialize the system\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!dimensions.width || !dimensions.height || isInitialized) return;\n        // Initialize contexts\n        const mainCanvas = canvasRef.current;\n        const rainCanvas = rainCanvasRef.current;\n        const gridCanvas = gridCanvasRef.current;\n        const fxCanvas = fxCanvasRef.current;\n        if (!mainCanvas || !rainCanvas || !gridCanvas || !fxCanvas) return;\n        // Set dimensions with device pixel ratio for crisp rendering\n        const dpr = window.devicePixelRatio || 1;\n        // Update all canvases with proper dimensions\n        [\n            mainCanvas,\n            rainCanvas,\n            gridCanvas,\n            fxCanvas\n        ].forEach((canvas)=>{\n            canvas.width = dimensions.width * dpr;\n            canvas.height = dimensions.height * dpr;\n            const ctx = canvas.getContext(\"2d\");\n            if (ctx) {\n                ctx.scale(dpr, dpr);\n            }\n        });\n        // Initialize Matrix rain\n        initMatrixRain();\n        // Initialize Grid\n        initGrid();\n        // Mark as initialized\n        setIsInitialized(true);\n        // Set loaded with delay for transition\n        setTimeout(()=>{\n            setIsLoaded(true);\n        }, 300);\n        // Cleanup function\n        return ()=>{\n            cleanupAnimations();\n        };\n    }, [\n        dimensions,\n        isInitialized,\n        cleanupAnimations\n    ]);\n    // Initialize Matrix rain\n    const initMatrixRain = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (!matrixRainEnabled) return;\n        const { width, height } = dimensions;\n        const drops = [];\n        // Calculate number of drops based on width\n        const columns = Math.floor(width / 20); // One drop every ~20px\n        for(let i = 0; i < columns; i++){\n            drops.push({\n                x: i * 20 + Math.random() * 10,\n                y: Math.random() * -500,\n                length: Math.floor(Math.random() * 15) + 5,\n                speed: Math.random() * 1.5 + 0.5,\n                char: matrixChars[Math.floor(Math.random() * matrixChars.length)],\n                opacity: Math.random() * 0.5 + 0.3,\n                hue: Math.random() * 30 // Slight hue variation\n            });\n        }\n        matrixRainRef.current = drops;\n    }, [\n        dimensions,\n        matrixChars,\n        matrixRainEnabled\n    ]);\n    // Initialize Grid\n    const initGrid = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (!gridEnabled) return;\n        const { width, height } = dimensions;\n        const nodes = [];\n        // Calculate number of nodes based on density\n        const nodeCount = Math.min(Math.floor(width * height / 20000 * density), 150);\n        for(let i = 0; i < nodeCount; i++){\n            nodes.push({\n                x: Math.random() * width,\n                y: Math.random() * height,\n                size: Math.random() * 2.5 + 1.5,\n                pulseSpeed: Math.random() * 0.02 + 0.01,\n                glowIntensity: Math.random() * 0.3 + 0.7,\n                connections: []\n            });\n        }\n        // Compute connections\n        nodes.forEach((node, index)=>{\n            const connections = [];\n            const maxConnections = Math.floor(Math.random() * 3) + 2;\n            // Find closest nodes\n            const distances = nodes.map((otherNode, otherIndex)=>{\n                if (otherIndex === index) return {\n                    index: otherIndex,\n                    distance: Infinity\n                };\n                const dx = node.x - otherNode.x;\n                const dy = node.y - otherNode.y;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                return {\n                    index: otherIndex,\n                    distance\n                };\n            }).filter((item)=>item.distance < 250) // Max connection distance\n            .sort((a, b)=>a.distance - b.distance).slice(0, maxConnections);\n            node.connections = distances.map((d)=>d.index);\n        });\n        gridNodesRef.current = nodes;\n    }, [\n        dimensions,\n        density,\n        gridEnabled\n    ]);\n    // Animation loop for Matrix rain\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isInitialized || !matrixRainEnabled) return;\n        const rainCanvas = rainCanvasRef.current;\n        if (!rainCanvas) return;\n        const ctx = rainCanvas.getContext(\"2d\", {\n            alpha: true\n        });\n        if (!ctx) return;\n        const animate = ()=>{\n            // Skip animation frames during resize to improve performance\n            if (isResizingRef.current) {\n                rainAnimationRef.current = requestAnimationFrame(animate);\n                return;\n            }\n            ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n            // Set global composition for glow effect\n            ctx.globalCompositeOperation = \"source-over\";\n            // Update and draw rain drops\n            matrixRainRef.current.forEach((drop, index)=>{\n                // Update position\n                drop.y += drop.speed;\n                // Reset if out of bounds\n                if (drop.y > dimensions.height) {\n                    drop.y = Math.random() * -200;\n                    drop.length = Math.floor(Math.random() * 15) + 5;\n                    drop.speed = Math.random() * 1.5 + 0.5;\n                    drop.char = matrixChars[Math.floor(Math.random() * matrixChars.length)];\n                    drop.opacity = Math.random() * 0.5 + 0.3;\n                }\n                // Randomly change character\n                if (Math.random() < 0.01) {\n                    drop.char = matrixChars[Math.floor(Math.random() * matrixChars.length)];\n                }\n                // Draw trail\n                for(let i = 0; i < drop.length; i++){\n                    const y = drop.y - i * 20;\n                    if (y < 0) continue;\n                    // Get trail opacity - head is brightest\n                    const trailOpacity = drop.opacity * (1 - i / drop.length);\n                    // Color based on position in trail\n                    const color = i === 0 ? \"rgba(180, 255, 180, \".concat(drop.opacity + 0.3, \")\") : \"hsla(\".concat(120 + drop.hue, \", 100%, \").concat(50 - i * 3, \"%, \").concat(trailOpacity, \")\");\n                    ctx.font = '16px \"JetBrains Mono\", monospace';\n                    ctx.fillStyle = color;\n                    ctx.fillText(i === 0 ? drop.char : matrixChars[Math.floor(Math.random() * matrixChars.length)], drop.x, y);\n                }\n            });\n            rainAnimationRef.current = requestAnimationFrame(animate);\n        };\n        animate();\n        return ()=>{\n            if (rainAnimationRef.current) {\n                cancelAnimationFrame(rainAnimationRef.current);\n            }\n        };\n    }, [\n        isInitialized,\n        matrixRainEnabled,\n        dimensions,\n        matrixChars\n    ]);\n    // Animation loop for Grid\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isInitialized || !gridEnabled) return;\n        const gridCanvas = gridCanvasRef.current;\n        if (!gridCanvas) return;\n        const ctx = gridCanvas.getContext(\"2d\", {\n            alpha: true\n        });\n        if (!ctx) return;\n        const animate = (timestamp)=>{\n            // Skip animation frames during resize to improve performance\n            if (isResizingRef.current) {\n                gridAnimationRef.current = requestAnimationFrame(animate);\n                return;\n            }\n            ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n            // Set line properties\n            ctx.lineWidth = 1;\n            ctx.lineCap = \"round\";\n            // Draw connections first (behind nodes)\n            gridNodesRef.current.forEach((node, index)=>{\n                node.connections.forEach((connectionIndex)=>{\n                    const targetNode = gridNodesRef.current[connectionIndex];\n                    // Calculate distance to determine opacity\n                    const dx = node.x - targetNode.x;\n                    const dy = node.y - targetNode.y;\n                    const distance = Math.sqrt(dx * dx + dy * dy);\n                    const maxDistance = 250;\n                    // Skip if too far\n                    if (distance > maxDistance) return;\n                    // Calculate line opacity based on distance\n                    const lineOpacity = 0.1 + 0.1 * (1 - distance / maxDistance);\n                    // Create gradient for line\n                    const gradient = ctx.createLinearGradient(node.x, node.y, targetNode.x, targetNode.y);\n                    gradient.addColorStop(0, \"rgba(\".concat(hexToRgb(themeColors.primary), \", \").concat(lineOpacity * node.glowIntensity, \")\"));\n                    gradient.addColorStop(1, \"rgba(\".concat(hexToRgb(themeColors.secondary), \", \").concat(lineOpacity * targetNode.glowIntensity, \")\"));\n                    ctx.strokeStyle = gradient;\n                    // Draw line\n                    ctx.beginPath();\n                    ctx.moveTo(node.x, node.y);\n                    ctx.lineTo(targetNode.x, targetNode.y);\n                    ctx.stroke();\n                });\n            });\n            // Draw nodes\n            gridNodesRef.current.forEach((node, index)=>{\n                // Update pulse if enabled\n                if (pulseNodes) {\n                    node.glowIntensity = 0.7 + 0.3 * Math.sin(timestamp * node.pulseSpeed);\n                }\n                // Draw node glow\n                ctx.beginPath();\n                const gradient = ctx.createRadialGradient(node.x, node.y, 0, node.x, node.y, node.size * 8);\n                gradient.addColorStop(0, \"rgba(\".concat(hexToRgb(themeColors.primary), \", \").concat(0.3 * node.glowIntensity, \")\"));\n                gradient.addColorStop(1, \"rgba(\".concat(hexToRgb(themeColors.primary), \", 0)\"));\n                ctx.fillStyle = gradient;\n                ctx.arc(node.x, node.y, node.size * 8, 0, Math.PI * 2);\n                ctx.fill();\n                // Draw node\n                ctx.beginPath();\n                ctx.fillStyle = themeColors.primary;\n                ctx.arc(node.x, node.y, node.size, 0, Math.PI * 2);\n                ctx.fill();\n            });\n            gridAnimationRef.current = requestAnimationFrame(animate);\n        };\n        animate(0);\n        return ()=>{\n            if (gridAnimationRef.current) {\n                cancelAnimationFrame(gridAnimationRef.current);\n            }\n        };\n    }, [\n        isInitialized,\n        gridEnabled,\n        dimensions,\n        pulseNodes,\n        themeColors\n    ]);\n    // Handle mouse interactions\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isInitialized || !interactive) return;\n        const handleMouseMove = (e)=>{\n            if (!containerRef.current) return;\n            const rect = containerRef.current.getBoundingClientRect();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            setMousePosition({\n                x,\n                y,\n                active: true\n            });\n            // Spawn particles with throttling for better performance\n            spawnParticles(x, y, 1);\n        };\n        const handleMouseLeave = ()=>{\n            setMousePosition({\n                ...mousePosition,\n                active: false\n            });\n        };\n        const handleMouseClick = (e)=>{\n            if (!containerRef.current) return;\n            const rect = containerRef.current.getBoundingClientRect();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            console.log(\"Stellar map clicked at:\", x, y);\n            // Spawn more particles on click\n            spawnParticles(x, y, 10);\n            // Add interactive matrix effect on click\n            if (matrixRainEnabled) {\n                const additionalDrops = 10;\n                for(let i = 0; i < additionalDrops; i++){\n                    matrixRainRef.current.push({\n                        x: x + Math.random() * 100 - 50,\n                        y: y,\n                        length: Math.floor(Math.random() * 15) + 5,\n                        speed: Math.random() * 1.5 + 0.5,\n                        char: matrixChars[Math.floor(Math.random() * matrixChars.length)],\n                        opacity: Math.random() * 0.7 + 0.5,\n                        hue: Math.random() * 30\n                    });\n                }\n            }\n        };\n        const container = containerRef.current;\n        if (container) {\n            container.addEventListener(\"mousemove\", handleMouseMove, {\n                passive: true\n            });\n            container.addEventListener(\"mouseleave\", handleMouseLeave);\n            container.addEventListener(\"click\", handleMouseClick);\n        }\n        return ()=>{\n            if (container) {\n                container.removeEventListener(\"mousemove\", handleMouseMove);\n                container.removeEventListener(\"mouseleave\", handleMouseLeave);\n                container.removeEventListener(\"click\", handleMouseClick);\n            }\n        };\n    }, [\n        isInitialized,\n        interactive,\n        mousePosition,\n        matrixRainEnabled,\n        matrixChars\n    ]);\n    // Spawn particles with throttling\n    const spawnParticles = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((x, y, count)=>{\n        // Limit particle spawn rate\n        const now = Date.now();\n        if (now - lastParticleTimeRef.current < 50) return;\n        lastParticleTimeRef.current = now;\n        for(let i = 0; i < count; i++){\n            const angle = Math.random() * Math.PI * 2;\n            const speed = Math.random() * 2 + 1;\n            particlesRef.current.push({\n                x,\n                y,\n                vx: Math.cos(angle) * speed,\n                vy: Math.sin(angle) * speed,\n                size: Math.random() * 3 + 1,\n                color: theme === \"multi\" ? \"hsl(\".concat(Math.random() * 60 + 90, \", 100%, 60%)\") : themeColors.primary,\n                lifespan: Math.random() * 30 + 20,\n                age: 0\n            });\n        }\n    }, [\n        theme,\n        themeColors.primary\n    ]);\n    // Animation loop for Particles\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isInitialized) return;\n        const mainCanvas = canvasRef.current;\n        if (!mainCanvas) return;\n        const ctx = mainCanvas.getContext(\"2d\", {\n            alpha: true\n        });\n        if (!ctx) return;\n        const animate = ()=>{\n            // Skip animation frames during resize to improve performance\n            if (isResizingRef.current) {\n                particlesAnimationRef.current = requestAnimationFrame(animate);\n                return;\n            }\n            ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n            // Update and draw particles\n            particlesRef.current = particlesRef.current.filter((particle)=>{\n                // Update position\n                particle.x += particle.vx;\n                particle.y += particle.vy;\n                // Update age\n                particle.age++;\n                // Remove if too old\n                if (particle.age > particle.lifespan) {\n                    return false;\n                }\n                // Calculate opacity based on age\n                const opacity = 1 - particle.age / particle.lifespan;\n                // Draw particle\n                ctx.beginPath();\n                ctx.fillStyle = particle.color.replace(\")\", \", \".concat(opacity, \")\")).replace(\"rgb\", \"rgba\");\n                ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n                ctx.fill();\n                return true;\n            });\n            particlesAnimationRef.current = requestAnimationFrame(animate);\n        };\n        animate();\n        return ()=>{\n            if (particlesAnimationRef.current) {\n                cancelAnimationFrame(particlesAnimationRef.current);\n            }\n        };\n    }, [\n        isInitialized,\n        dimensions\n    ]);\n    // Interactive glow effect\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isInitialized || !interactiveGlow) return;\n        const fxCanvas = fxCanvasRef.current;\n        if (!fxCanvas) return;\n        const ctx = fxCanvas.getContext(\"2d\", {\n            alpha: true\n        });\n        if (!ctx) return;\n        const animate = ()=>{\n            // Skip animation frames during resize to improve performance\n            if (isResizingRef.current) {\n                fxAnimationRef.current = requestAnimationFrame(animate);\n                return;\n            }\n            ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n            // Only draw when mouse is active\n            if (mousePosition.active) {\n                const { x, y } = mousePosition;\n                // Create radial gradient for glow\n                const gradient = ctx.createRadialGradient(x, y, 0, x, y, 200);\n                gradient.addColorStop(0, \"rgba(\".concat(hexToRgb(themeColors.primary), \", 0.15)\"));\n                gradient.addColorStop(1, \"rgba(\".concat(hexToRgb(themeColors.primary), \", 0)\"));\n                ctx.fillStyle = gradient;\n                ctx.beginPath();\n                ctx.arc(x, y, 200, 0, Math.PI * 2);\n                ctx.fill();\n            }\n            fxAnimationRef.current = requestAnimationFrame(animate);\n        };\n        animate();\n        return ()=>{\n            if (fxAnimationRef.current) {\n                cancelAnimationFrame(fxAnimationRef.current);\n            }\n        };\n    }, [\n        isInitialized,\n        dimensions,\n        mousePosition,\n        interactiveGlow,\n        themeColors\n    ]);\n    // Utility function to convert hex to rgb\n    const hexToRgb = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((hex)=>{\n        // Remove # if present\n        hex = hex.replace(/^#/, \"\");\n        // Parse hex\n        const bigint = parseInt(hex, 16);\n        const r = bigint >> 16 & 255;\n        const g = bigint >> 8 & 255;\n        const b = bigint & 255;\n        return \"\".concat(r, \", \").concat(g, \", \").concat(b);\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: \"\".concat((_InteractiveStellarMap_module_css__WEBPACK_IMPORTED_MODULE_2___default().container), \" \").concat(isLoaded ? (_InteractiveStellarMap_module_css__WEBPACK_IMPORTED_MODULE_2___default().active) : \"\", \" \").concat((_InteractiveStellarMap_module_css__WEBPACK_IMPORTED_MODULE_2___default())[theme]),\n        style: {\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100vh\",\n            zIndex: 10,\n            pointerEvents: \"auto\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: rainCanvasRef,\n                className: (_InteractiveStellarMap_module_css__WEBPACK_IMPORTED_MODULE_2___default().canvas),\n                width: dimensions.width,\n                height: dimensions.height\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ck\\\\LandingProspera\\\\prospera-nextjs\\\\src\\\\components\\\\InteractiveStellarMap\\\\InteractiveStellarMap.tsx\",\n                lineNumber: 744,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: gridCanvasRef,\n                className: (_InteractiveStellarMap_module_css__WEBPACK_IMPORTED_MODULE_2___default().canvas),\n                width: dimensions.width,\n                height: dimensions.height\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ck\\\\LandingProspera\\\\prospera-nextjs\\\\src\\\\components\\\\InteractiveStellarMap\\\\InteractiveStellarMap.tsx\",\n                lineNumber: 752,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                className: (_InteractiveStellarMap_module_css__WEBPACK_IMPORTED_MODULE_2___default().canvas),\n                width: dimensions.width,\n                height: dimensions.height\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ck\\\\LandingProspera\\\\prospera-nextjs\\\\src\\\\components\\\\InteractiveStellarMap\\\\InteractiveStellarMap.tsx\",\n                lineNumber: 760,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: fxCanvasRef,\n                className: (_InteractiveStellarMap_module_css__WEBPACK_IMPORTED_MODULE_2___default().canvas),\n                width: dimensions.width,\n                height: dimensions.height\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ck\\\\LandingProspera\\\\prospera-nextjs\\\\src\\\\components\\\\InteractiveStellarMap\\\\InteractiveStellarMap.tsx\",\n                lineNumber: 768,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_InteractiveStellarMap_module_css__WEBPACK_IMPORTED_MODULE_2___default().content),\n                style: {\n                    pointerEvents: \"auto\"\n                },\n                children: children\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ck\\\\LandingProspera\\\\prospera-nextjs\\\\src\\\\components\\\\InteractiveStellarMap\\\\InteractiveStellarMap.tsx\",\n                lineNumber: 776,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\ck\\\\LandingProspera\\\\prospera-nextjs\\\\src\\\\components\\\\InteractiveStellarMap\\\\InteractiveStellarMap.tsx\",\n        lineNumber: 732,\n        columnNumber: 5\n    }, undefined);\n};\n_s(InteractiveStellarMap, \"M7lfoDSz3WojWNsIVVuEB9hoJhE=\");\n_c = InteractiveStellarMap;\n/* harmony default export */ __webpack_exports__[\"default\"] = (InteractiveStellarMap);\nvar _c;\n$RefreshReg$(_c, \"InteractiveStellarMap\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/InteractiveStellarMap/InteractiveStellarMap.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/InteractiveStellarMap/index.ts":
/*!*******************************************************!*\
  !*** ./src/components/InteractiveStellarMap/index.ts ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _InteractiveStellarMap__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _InteractiveStellarMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InteractiveStellarMap */ \"(app-pages-browser)/./src/components/InteractiveStellarMap/InteractiveStellarMap.tsx\");\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0ludGVyYWN0aXZlU3RlbGxhck1hcC9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9JbnRlcmFjdGl2ZVN0ZWxsYXJNYXAvaW5kZXgudHM/ZGI3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9JbnRlcmFjdGl2ZVN0ZWxsYXJNYXAnO1xyXG5cclxuZXhwb3J0IHR5cGUge1xyXG4gIEludGVyYWN0aXZlU3RlbGxhck1hcFByb3BzLFxyXG4gIE1hdHJpeFJhaW5Ecm9wLFxyXG4gIEdyaWROb2RlLFxyXG4gIFBhcnRpY2xlXHJcbn0gZnJvbSAnLi9JbnRlcmFjdGl2ZVN0ZWxsYXJNYXAnOyJdLCJuYW1lcyI6WyJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/InteractiveStellarMap/index.ts\n"));

/***/ })

}]);